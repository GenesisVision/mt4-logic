// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SignalOrdersStatus.proto

#ifndef PROTOBUF_SignalOrdersStatus_2eproto__INCLUDED
#define PROTOBUF_SignalOrdersStatus_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Signal.pb.h"
#include "SignalMT4Trade.pb.h"
// @@protoc_insertion_point(includes)

namespace ProtoTypes {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_SignalOrdersStatus_2eproto();
void protobuf_AssignDesc_SignalOrdersStatus_2eproto();
void protobuf_ShutdownFile_SignalOrdersStatus_2eproto();

class OrderStatus;
class AccountOrdersStatus;
class OrdersStatusResponse;

// ===================================================================

class OrderStatus : public ::google::protobuf::Message {
 public:
  OrderStatus();
  virtual ~OrderStatus();

  OrderStatus(const OrderStatus& from);

  inline OrderStatus& operator=(const OrderStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrderStatus& default_instance();

  void Swap(OrderStatus* other);

  // implements Message ----------------------------------------------

  OrderStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrderStatus& from);
  void MergeFrom(const OrderStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 OrderId = 1;
  inline bool has_orderid() const;
  inline void clear_orderid();
  static const int kOrderIdFieldNumber = 1;
  inline ::google::protobuf::int32 orderid() const;
  inline void set_orderid(::google::protobuf::int32 value);

  // required .ProtoTypes.TradeSide Side = 2;
  inline bool has_side() const;
  inline void clear_side();
  static const int kSideFieldNumber = 2;
  inline ::ProtoTypes::TradeSide side() const;
  inline void set_side(::ProtoTypes::TradeSide value);

  // required int64 DateTime = 4;
  inline bool has_datetime() const;
  inline void clear_datetime();
  static const int kDateTimeFieldNumber = 4;
  inline ::google::protobuf::int64 datetime() const;
  inline void set_datetime(::google::protobuf::int64 value);

  // required double Volume = 7;
  inline bool has_volume() const;
  inline void clear_volume();
  static const int kVolumeFieldNumber = 7;
  inline double volume() const;
  inline void set_volume(double value);

  // required string Symbol = 8;
  inline bool has_symbol() const;
  inline void clear_symbol();
  static const int kSymbolFieldNumber = 8;
  inline const ::std::string& symbol() const;
  inline void set_symbol(const ::std::string& value);
  inline void set_symbol(const char* value);
  inline void set_symbol(const char* value, size_t size);
  inline ::std::string* mutable_symbol();
  inline ::std::string* release_symbol();
  inline void set_allocated_symbol(::std::string* symbol);

  // optional double StopLoss = 9 [default = 0];
  inline bool has_stoploss() const;
  inline void clear_stoploss();
  static const int kStopLossFieldNumber = 9;
  inline double stoploss() const;
  inline void set_stoploss(double value);

  // optional double TakeProfit = 10 [default = 0];
  inline bool has_takeprofit() const;
  inline void clear_takeprofit();
  static const int kTakeProfitFieldNumber = 10;
  inline double takeprofit() const;
  inline void set_takeprofit(double value);

  // required string Comment = 11;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 11;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  inline void set_allocated_comment(::std::string* comment);

  // @@protoc_insertion_point(class_scope:ProtoTypes.OrderStatus)
 private:
  inline void set_has_orderid();
  inline void clear_has_orderid();
  inline void set_has_side();
  inline void clear_has_side();
  inline void set_has_datetime();
  inline void clear_has_datetime();
  inline void set_has_volume();
  inline void clear_has_volume();
  inline void set_has_symbol();
  inline void clear_has_symbol();
  inline void set_has_stoploss();
  inline void clear_has_stoploss();
  inline void set_has_takeprofit();
  inline void clear_has_takeprofit();
  inline void set_has_comment();
  inline void clear_has_comment();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::int32 orderid_;
  int side_;
  ::google::protobuf::int64 datetime_;
  double volume_;
  ::std::string* symbol_;
  double stoploss_;
  double takeprofit_;
  ::std::string* comment_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];

  friend void  protobuf_AddDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_AssignDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_ShutdownFile_SignalOrdersStatus_2eproto();

  void InitAsDefaultInstance();
  static OrderStatus* default_instance_;
};
// -------------------------------------------------------------------

class AccountOrdersStatus : public ::google::protobuf::Message {
 public:
  AccountOrdersStatus();
  virtual ~AccountOrdersStatus();

  AccountOrdersStatus(const AccountOrdersStatus& from);

  inline AccountOrdersStatus& operator=(const AccountOrdersStatus& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AccountOrdersStatus& default_instance();

  void Swap(AccountOrdersStatus* other);

  // implements Message ----------------------------------------------

  AccountOrdersStatus* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AccountOrdersStatus& from);
  void MergeFrom(const AccountOrdersStatus& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 login = 1;
  inline bool has_login() const;
  inline void clear_login();
  static const int kLoginFieldNumber = 1;
  inline ::google::protobuf::int32 login() const;
  inline void set_login(::google::protobuf::int32 value);

  // repeated .ProtoTypes.OrderStatus orderStatus = 2;
  inline int orderstatus_size() const;
  inline void clear_orderstatus();
  static const int kOrderStatusFieldNumber = 2;
  inline const ::ProtoTypes::OrderStatus& orderstatus(int index) const;
  inline ::ProtoTypes::OrderStatus* mutable_orderstatus(int index);
  inline ::ProtoTypes::OrderStatus* add_orderstatus();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoTypes::OrderStatus >&
      orderstatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoTypes::OrderStatus >*
      mutable_orderstatus();

  // @@protoc_insertion_point(class_scope:ProtoTypes.AccountOrdersStatus)
 private:
  inline void set_has_login();
  inline void clear_has_login();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoTypes::OrderStatus > orderstatus_;
  ::google::protobuf::int32 login_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_AssignDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_ShutdownFile_SignalOrdersStatus_2eproto();

  void InitAsDefaultInstance();
  static AccountOrdersStatus* default_instance_;
};
// -------------------------------------------------------------------

class OrdersStatusResponse : public ::google::protobuf::Message {
 public:
  OrdersStatusResponse();
  virtual ~OrdersStatusResponse();

  OrdersStatusResponse(const OrdersStatusResponse& from);

  inline OrdersStatusResponse& operator=(const OrdersStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const OrdersStatusResponse& default_instance();

  void Swap(OrdersStatusResponse* other);

  // implements Message ----------------------------------------------

  OrdersStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const OrdersStatusResponse& from);
  void MergeFrom(const OrdersStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
  inline int ordersstatus_size() const;
  inline void clear_ordersstatus();
  static const int kOrdersStatusFieldNumber = 1;
  inline const ::ProtoTypes::AccountOrdersStatus& ordersstatus(int index) const;
  inline ::ProtoTypes::AccountOrdersStatus* mutable_ordersstatus(int index);
  inline ::ProtoTypes::AccountOrdersStatus* add_ordersstatus();
  inline const ::google::protobuf::RepeatedPtrField< ::ProtoTypes::AccountOrdersStatus >&
      ordersstatus() const;
  inline ::google::protobuf::RepeatedPtrField< ::ProtoTypes::AccountOrdersStatus >*
      mutable_ordersstatus();

  // @@protoc_insertion_point(class_scope:ProtoTypes.OrdersStatusResponse)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::ProtoTypes::AccountOrdersStatus > ordersstatus_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_AssignDesc_SignalOrdersStatus_2eproto();
  friend void protobuf_ShutdownFile_SignalOrdersStatus_2eproto();

  void InitAsDefaultInstance();
  static OrdersStatusResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// OrderStatus

// required int32 OrderId = 1;
inline bool OrderStatus::has_orderid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void OrderStatus::set_has_orderid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void OrderStatus::clear_has_orderid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void OrderStatus::clear_orderid() {
  orderid_ = 0;
  clear_has_orderid();
}
inline ::google::protobuf::int32 OrderStatus::orderid() const {
  return orderid_;
}
inline void OrderStatus::set_orderid(::google::protobuf::int32 value) {
  set_has_orderid();
  orderid_ = value;
}

// required .ProtoTypes.TradeSide Side = 2;
inline bool OrderStatus::has_side() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void OrderStatus::set_has_side() {
  _has_bits_[0] |= 0x00000002u;
}
inline void OrderStatus::clear_has_side() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void OrderStatus::clear_side() {
  side_ = 0;
  clear_has_side();
}
inline ::ProtoTypes::TradeSide OrderStatus::side() const {
  return static_cast< ::ProtoTypes::TradeSide >(side_);
}
inline void OrderStatus::set_side(::ProtoTypes::TradeSide value) {
  assert(::ProtoTypes::TradeSide_IsValid(value));
  set_has_side();
  side_ = value;
}

// required int64 DateTime = 4;
inline bool OrderStatus::has_datetime() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void OrderStatus::set_has_datetime() {
  _has_bits_[0] |= 0x00000004u;
}
inline void OrderStatus::clear_has_datetime() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void OrderStatus::clear_datetime() {
  datetime_ = GOOGLE_LONGLONG(0);
  clear_has_datetime();
}
inline ::google::protobuf::int64 OrderStatus::datetime() const {
  return datetime_;
}
inline void OrderStatus::set_datetime(::google::protobuf::int64 value) {
  set_has_datetime();
  datetime_ = value;
}

// required double Volume = 7;
inline bool OrderStatus::has_volume() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void OrderStatus::set_has_volume() {
  _has_bits_[0] |= 0x00000008u;
}
inline void OrderStatus::clear_has_volume() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void OrderStatus::clear_volume() {
  volume_ = 0;
  clear_has_volume();
}
inline double OrderStatus::volume() const {
  return volume_;
}
inline void OrderStatus::set_volume(double value) {
  set_has_volume();
  volume_ = value;
}

// required string Symbol = 8;
inline bool OrderStatus::has_symbol() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void OrderStatus::set_has_symbol() {
  _has_bits_[0] |= 0x00000010u;
}
inline void OrderStatus::clear_has_symbol() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void OrderStatus::clear_symbol() {
  if (symbol_ != &::google::protobuf::internal::kEmptyString) {
    symbol_->clear();
  }
  clear_has_symbol();
}
inline const ::std::string& OrderStatus::symbol() const {
  return *symbol_;
}
inline void OrderStatus::set_symbol(const ::std::string& value) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::kEmptyString) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(value);
}
inline void OrderStatus::set_symbol(const char* value) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::kEmptyString) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(value);
}
inline void OrderStatus::set_symbol(const char* value, size_t size) {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::kEmptyString) {
    symbol_ = new ::std::string;
  }
  symbol_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OrderStatus::mutable_symbol() {
  set_has_symbol();
  if (symbol_ == &::google::protobuf::internal::kEmptyString) {
    symbol_ = new ::std::string;
  }
  return symbol_;
}
inline ::std::string* OrderStatus::release_symbol() {
  clear_has_symbol();
  if (symbol_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = symbol_;
    symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OrderStatus::set_allocated_symbol(::std::string* symbol) {
  if (symbol_ != &::google::protobuf::internal::kEmptyString) {
    delete symbol_;
  }
  if (symbol) {
    set_has_symbol();
    symbol_ = symbol;
  } else {
    clear_has_symbol();
    symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional double StopLoss = 9 [default = 0];
inline bool OrderStatus::has_stoploss() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void OrderStatus::set_has_stoploss() {
  _has_bits_[0] |= 0x00000020u;
}
inline void OrderStatus::clear_has_stoploss() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void OrderStatus::clear_stoploss() {
  stoploss_ = 0;
  clear_has_stoploss();
}
inline double OrderStatus::stoploss() const {
  return stoploss_;
}
inline void OrderStatus::set_stoploss(double value) {
  set_has_stoploss();
  stoploss_ = value;
}

// optional double TakeProfit = 10 [default = 0];
inline bool OrderStatus::has_takeprofit() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void OrderStatus::set_has_takeprofit() {
  _has_bits_[0] |= 0x00000040u;
}
inline void OrderStatus::clear_has_takeprofit() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void OrderStatus::clear_takeprofit() {
  takeprofit_ = 0;
  clear_has_takeprofit();
}
inline double OrderStatus::takeprofit() const {
  return takeprofit_;
}
inline void OrderStatus::set_takeprofit(double value) {
  set_has_takeprofit();
  takeprofit_ = value;
}

// required string Comment = 11;
inline bool OrderStatus::has_comment() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void OrderStatus::set_has_comment() {
  _has_bits_[0] |= 0x00000080u;
}
inline void OrderStatus::clear_has_comment() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void OrderStatus::clear_comment() {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    comment_->clear();
  }
  clear_has_comment();
}
inline const ::std::string& OrderStatus::comment() const {
  return *comment_;
}
inline void OrderStatus::set_comment(const ::std::string& value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void OrderStatus::set_comment(const char* value) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(value);
}
inline void OrderStatus::set_comment(const char* value, size_t size) {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  comment_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* OrderStatus::mutable_comment() {
  set_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    comment_ = new ::std::string;
  }
  return comment_;
}
inline ::std::string* OrderStatus::release_comment() {
  clear_has_comment();
  if (comment_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = comment_;
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void OrderStatus::set_allocated_comment(::std::string* comment) {
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (comment) {
    set_has_comment();
    comment_ = comment;
  } else {
    clear_has_comment();
    comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// AccountOrdersStatus

// required int32 login = 1;
inline bool AccountOrdersStatus::has_login() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AccountOrdersStatus::set_has_login() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AccountOrdersStatus::clear_has_login() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AccountOrdersStatus::clear_login() {
  login_ = 0;
  clear_has_login();
}
inline ::google::protobuf::int32 AccountOrdersStatus::login() const {
  return login_;
}
inline void AccountOrdersStatus::set_login(::google::protobuf::int32 value) {
  set_has_login();
  login_ = value;
}

// repeated .ProtoTypes.OrderStatus orderStatus = 2;
inline int AccountOrdersStatus::orderstatus_size() const {
  return orderstatus_.size();
}
inline void AccountOrdersStatus::clear_orderstatus() {
  orderstatus_.Clear();
}
inline const ::ProtoTypes::OrderStatus& AccountOrdersStatus::orderstatus(int index) const {
  return orderstatus_.Get(index);
}
inline ::ProtoTypes::OrderStatus* AccountOrdersStatus::mutable_orderstatus(int index) {
  return orderstatus_.Mutable(index);
}
inline ::ProtoTypes::OrderStatus* AccountOrdersStatus::add_orderstatus() {
  return orderstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTypes::OrderStatus >&
AccountOrdersStatus::orderstatus() const {
  return orderstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTypes::OrderStatus >*
AccountOrdersStatus::mutable_orderstatus() {
  return &orderstatus_;
}

// -------------------------------------------------------------------

// OrdersStatusResponse

// repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
inline int OrdersStatusResponse::ordersstatus_size() const {
  return ordersstatus_.size();
}
inline void OrdersStatusResponse::clear_ordersstatus() {
  ordersstatus_.Clear();
}
inline const ::ProtoTypes::AccountOrdersStatus& OrdersStatusResponse::ordersstatus(int index) const {
  return ordersstatus_.Get(index);
}
inline ::ProtoTypes::AccountOrdersStatus* OrdersStatusResponse::mutable_ordersstatus(int index) {
  return ordersstatus_.Mutable(index);
}
inline ::ProtoTypes::AccountOrdersStatus* OrdersStatusResponse::add_ordersstatus() {
  return ordersstatus_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::ProtoTypes::AccountOrdersStatus >&
OrdersStatusResponse::ordersstatus() const {
  return ordersstatus_;
}
inline ::google::protobuf::RepeatedPtrField< ::ProtoTypes::AccountOrdersStatus >*
OrdersStatusResponse::mutable_ordersstatus() {
  return &ordersstatus_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoTypes

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_SignalOrdersStatus_2eproto__INCLUDED
