// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: SignalOrdersStatus.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "SignalOrdersStatus.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace ProtoTypes {

namespace {

const ::google::protobuf::Descriptor* OrderStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrderStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* AccountOrdersStatus_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AccountOrdersStatus_reflection_ = NULL;
const ::google::protobuf::Descriptor* OrdersStatusResponse_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  OrdersStatusResponse_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_SignalOrdersStatus_2eproto() {
  protobuf_AddDesc_SignalOrdersStatus_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "SignalOrdersStatus.proto");
  GOOGLE_CHECK(file != NULL);
  OrderStatus_descriptor_ = file->message_type(0);
  static const int OrderStatus_offsets_[8] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, orderid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, side_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, datetime_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, volume_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, symbol_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, stoploss_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, takeprofit_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, comment_),
  };
  OrderStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrderStatus_descriptor_,
      OrderStatus::default_instance_,
      OrderStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrderStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrderStatus));
  AccountOrdersStatus_descriptor_ = file->message_type(1);
  static const int AccountOrdersStatus_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountOrdersStatus, login_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountOrdersStatus, orderstatus_),
  };
  AccountOrdersStatus_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AccountOrdersStatus_descriptor_,
      AccountOrdersStatus::default_instance_,
      AccountOrdersStatus_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountOrdersStatus, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccountOrdersStatus, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AccountOrdersStatus));
  OrdersStatusResponse_descriptor_ = file->message_type(2);
  static const int OrdersStatusResponse_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrdersStatusResponse, ordersstatus_),
  };
  OrdersStatusResponse_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      OrdersStatusResponse_descriptor_,
      OrdersStatusResponse::default_instance_,
      OrdersStatusResponse_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrdersStatusResponse, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(OrdersStatusResponse, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(OrdersStatusResponse));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_SignalOrdersStatus_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrderStatus_descriptor_, &OrderStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AccountOrdersStatus_descriptor_, &AccountOrdersStatus::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    OrdersStatusResponse_descriptor_, &OrdersStatusResponse::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_SignalOrdersStatus_2eproto() {
  delete OrderStatus::default_instance_;
  delete OrderStatus_reflection_;
  delete AccountOrdersStatus::default_instance_;
  delete AccountOrdersStatus_reflection_;
  delete OrdersStatusResponse::default_instance_;
  delete OrdersStatusResponse_reflection_;
}

void protobuf_AddDesc_SignalOrdersStatus_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::ProtoTypes::protobuf_AddDesc_Signal_2eproto();
  ::ProtoTypes::protobuf_AddDesc_SignalMT4Trade_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\030SignalOrdersStatus.proto\022\nProtoTypes\032\014"
    "Signal.proto\032\024SignalMT4Trade.proto\"\262\001\n\013O"
    "rderStatus\022\017\n\007OrderId\030\001 \002(\005\022#\n\004Side\030\002 \002("
    "\0162\025.ProtoTypes.TradeSide\022\020\n\010DateTime\030\004 \002"
    "(\003\022\016\n\006Volume\030\007 \002(\001\022\016\n\006Symbol\030\010 \002(\t\022\023\n\010St"
    "opLoss\030\t \001(\001:\0010\022\025\n\nTakeProfit\030\n \001(\001:\0010\022\017"
    "\n\007Comment\030\013 \002(\t\"R\n\023AccountOrdersStatus\022\r"
    "\n\005login\030\001 \002(\005\022,\n\013orderStatus\030\002 \003(\0132\027.Pro"
    "toTypes.OrderStatus\"M\n\024OrdersStatusRespo"
    "nse\0225\n\014ordersStatus\030\001 \003(\0132\037.ProtoTypes.A"
    "ccountOrdersStatus", 418);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "SignalOrdersStatus.proto", &protobuf_RegisterTypes);
  OrderStatus::default_instance_ = new OrderStatus();
  AccountOrdersStatus::default_instance_ = new AccountOrdersStatus();
  OrdersStatusResponse::default_instance_ = new OrdersStatusResponse();
  OrderStatus::default_instance_->InitAsDefaultInstance();
  AccountOrdersStatus::default_instance_->InitAsDefaultInstance();
  OrdersStatusResponse::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_SignalOrdersStatus_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_SignalOrdersStatus_2eproto {
  StaticDescriptorInitializer_SignalOrdersStatus_2eproto() {
    protobuf_AddDesc_SignalOrdersStatus_2eproto();
  }
} static_descriptor_initializer_SignalOrdersStatus_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int OrderStatus::kOrderIdFieldNumber;
const int OrderStatus::kSideFieldNumber;
const int OrderStatus::kDateTimeFieldNumber;
const int OrderStatus::kVolumeFieldNumber;
const int OrderStatus::kSymbolFieldNumber;
const int OrderStatus::kStopLossFieldNumber;
const int OrderStatus::kTakeProfitFieldNumber;
const int OrderStatus::kCommentFieldNumber;
#endif  // !_MSC_VER

OrderStatus::OrderStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrderStatus::InitAsDefaultInstance() {
}

OrderStatus::OrderStatus(const OrderStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrderStatus::SharedCtor() {
  _cached_size_ = 0;
  orderid_ = 0;
  side_ = 0;
  datetime_ = GOOGLE_LONGLONG(0);
  volume_ = 0;
  symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  stoploss_ = 0;
  takeprofit_ = 0;
  comment_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrderStatus::~OrderStatus() {
  SharedDtor();
}

void OrderStatus::SharedDtor() {
  if (symbol_ != &::google::protobuf::internal::kEmptyString) {
    delete symbol_;
  }
  if (comment_ != &::google::protobuf::internal::kEmptyString) {
    delete comment_;
  }
  if (this != default_instance_) {
  }
}

void OrderStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrderStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrderStatus_descriptor_;
}

const OrderStatus& OrderStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SignalOrdersStatus_2eproto();
  return *default_instance_;
}

OrderStatus* OrderStatus::default_instance_ = NULL;

OrderStatus* OrderStatus::New() const {
  return new OrderStatus;
}

void OrderStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    orderid_ = 0;
    side_ = 0;
    datetime_ = GOOGLE_LONGLONG(0);
    volume_ = 0;
    if (has_symbol()) {
      if (symbol_ != &::google::protobuf::internal::kEmptyString) {
        symbol_->clear();
      }
    }
    stoploss_ = 0;
    takeprofit_ = 0;
    if (has_comment()) {
      if (comment_ != &::google::protobuf::internal::kEmptyString) {
        comment_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrderStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 OrderId = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &orderid_)));
          set_has_orderid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_Side;
        break;
      }

      // required .ProtoTypes.TradeSide Side = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_Side:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::ProtoTypes::TradeSide_IsValid(value)) {
            set_side(static_cast< ::ProtoTypes::TradeSide >(value));
          } else {
            mutable_unknown_fields()->AddVarint(2, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_DateTime;
        break;
      }

      // required int64 DateTime = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_DateTime:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datetime_)));
          set_has_datetime();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(57)) goto parse_Volume;
        break;
      }

      // required double Volume = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_Volume:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &volume_)));
          set_has_volume();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_Symbol;
        break;
      }

      // required string Symbol = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->symbol().data(), this->symbol().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(73)) goto parse_StopLoss;
        break;
      }

      // optional double StopLoss = 9 [default = 0];
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_StopLoss:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &stoploss_)));
          set_has_stoploss();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(81)) goto parse_TakeProfit;
        break;
      }

      // optional double TakeProfit = 10 [default = 0];
      case 10: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_FIXED64) {
         parse_TakeProfit:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &takeprofit_)));
          set_has_takeprofit();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(90)) goto parse_Comment;
        break;
      }

      // required string Comment = 11;
      case 11: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_Comment:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_comment()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->comment().data(), this->comment().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrderStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 OrderId = 1;
  if (has_orderid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->orderid(), output);
  }

  // required .ProtoTypes.TradeSide Side = 2;
  if (has_side()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->side(), output);
  }

  // required int64 DateTime = 4;
  if (has_datetime()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->datetime(), output);
  }

  // required double Volume = 7;
  if (has_volume()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(7, this->volume(), output);
  }

  // required string Symbol = 8;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      8, this->symbol(), output);
  }

  // optional double StopLoss = 9 [default = 0];
  if (has_stoploss()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(9, this->stoploss(), output);
  }

  // optional double TakeProfit = 10 [default = 0];
  if (has_takeprofit()) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(10, this->takeprofit(), output);
  }

  // required string Comment = 11;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      11, this->comment(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrderStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 OrderId = 1;
  if (has_orderid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->orderid(), target);
  }

  // required .ProtoTypes.TradeSide Side = 2;
  if (has_side()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->side(), target);
  }

  // required int64 DateTime = 4;
  if (has_datetime()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->datetime(), target);
  }

  // required double Volume = 7;
  if (has_volume()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(7, this->volume(), target);
  }

  // required string Symbol = 8;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->symbol().data(), this->symbol().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        8, this->symbol(), target);
  }

  // optional double StopLoss = 9 [default = 0];
  if (has_stoploss()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(9, this->stoploss(), target);
  }

  // optional double TakeProfit = 10 [default = 0];
  if (has_takeprofit()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(10, this->takeprofit(), target);
  }

  // required string Comment = 11;
  if (has_comment()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->comment().data(), this->comment().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        11, this->comment(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrderStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 OrderId = 1;
    if (has_orderid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->orderid());
    }

    // required .ProtoTypes.TradeSide Side = 2;
    if (has_side()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->side());
    }

    // required int64 DateTime = 4;
    if (has_datetime()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->datetime());
    }

    // required double Volume = 7;
    if (has_volume()) {
      total_size += 1 + 8;
    }

    // required string Symbol = 8;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

    // optional double StopLoss = 9 [default = 0];
    if (has_stoploss()) {
      total_size += 1 + 8;
    }

    // optional double TakeProfit = 10 [default = 0];
    if (has_takeprofit()) {
      total_size += 1 + 8;
    }

    // required string Comment = 11;
    if (has_comment()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->comment());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrderStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrderStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrderStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrderStatus::MergeFrom(const OrderStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_orderid()) {
      set_orderid(from.orderid());
    }
    if (from.has_side()) {
      set_side(from.side());
    }
    if (from.has_datetime()) {
      set_datetime(from.datetime());
    }
    if (from.has_volume()) {
      set_volume(from.volume());
    }
    if (from.has_symbol()) {
      set_symbol(from.symbol());
    }
    if (from.has_stoploss()) {
      set_stoploss(from.stoploss());
    }
    if (from.has_takeprofit()) {
      set_takeprofit(from.takeprofit());
    }
    if (from.has_comment()) {
      set_comment(from.comment());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrderStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrderStatus::CopyFrom(const OrderStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrderStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000009f) != 0x0000009f) return false;

  return true;
}

void OrderStatus::Swap(OrderStatus* other) {
  if (other != this) {
    std::swap(orderid_, other->orderid_);
    std::swap(side_, other->side_);
    std::swap(datetime_, other->datetime_);
    std::swap(volume_, other->volume_);
    std::swap(symbol_, other->symbol_);
    std::swap(stoploss_, other->stoploss_);
    std::swap(takeprofit_, other->takeprofit_);
    std::swap(comment_, other->comment_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrderStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrderStatus_descriptor_;
  metadata.reflection = OrderStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AccountOrdersStatus::kLoginFieldNumber;
const int AccountOrdersStatus::kOrderStatusFieldNumber;
#endif  // !_MSC_VER

AccountOrdersStatus::AccountOrdersStatus()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AccountOrdersStatus::InitAsDefaultInstance() {
}

AccountOrdersStatus::AccountOrdersStatus(const AccountOrdersStatus& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AccountOrdersStatus::SharedCtor() {
  _cached_size_ = 0;
  login_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AccountOrdersStatus::~AccountOrdersStatus() {
  SharedDtor();
}

void AccountOrdersStatus::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AccountOrdersStatus::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccountOrdersStatus::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AccountOrdersStatus_descriptor_;
}

const AccountOrdersStatus& AccountOrdersStatus::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SignalOrdersStatus_2eproto();
  return *default_instance_;
}

AccountOrdersStatus* AccountOrdersStatus::default_instance_ = NULL;

AccountOrdersStatus* AccountOrdersStatus::New() const {
  return new AccountOrdersStatus;
}

void AccountOrdersStatus::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    login_ = 0;
  }
  orderstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AccountOrdersStatus::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 login = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &login_)));
          set_has_login();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orderStatus;
        break;
      }

      // repeated .ProtoTypes.OrderStatus orderStatus = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_orderStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_orderstatus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_orderStatus;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AccountOrdersStatus::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 login = 1;
  if (has_login()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->login(), output);
  }

  // repeated .ProtoTypes.OrderStatus orderStatus = 2;
  for (int i = 0; i < this->orderstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->orderstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AccountOrdersStatus::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 login = 1;
  if (has_login()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->login(), target);
  }

  // repeated .ProtoTypes.OrderStatus orderStatus = 2;
  for (int i = 0; i < this->orderstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->orderstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AccountOrdersStatus::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 login = 1;
    if (has_login()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->login());
    }

  }
  // repeated .ProtoTypes.OrderStatus orderStatus = 2;
  total_size += 1 * this->orderstatus_size();
  for (int i = 0; i < this->orderstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->orderstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccountOrdersStatus::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AccountOrdersStatus* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AccountOrdersStatus*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AccountOrdersStatus::MergeFrom(const AccountOrdersStatus& from) {
  GOOGLE_CHECK_NE(&from, this);
  orderstatus_.MergeFrom(from.orderstatus_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_login()) {
      set_login(from.login());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AccountOrdersStatus::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccountOrdersStatus::CopyFrom(const AccountOrdersStatus& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccountOrdersStatus::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  for (int i = 0; i < orderstatus_size(); i++) {
    if (!this->orderstatus(i).IsInitialized()) return false;
  }
  return true;
}

void AccountOrdersStatus::Swap(AccountOrdersStatus* other) {
  if (other != this) {
    std::swap(login_, other->login_);
    orderstatus_.Swap(&other->orderstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AccountOrdersStatus::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AccountOrdersStatus_descriptor_;
  metadata.reflection = AccountOrdersStatus_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int OrdersStatusResponse::kOrdersStatusFieldNumber;
#endif  // !_MSC_VER

OrdersStatusResponse::OrdersStatusResponse()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void OrdersStatusResponse::InitAsDefaultInstance() {
}

OrdersStatusResponse::OrdersStatusResponse(const OrdersStatusResponse& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void OrdersStatusResponse::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

OrdersStatusResponse::~OrdersStatusResponse() {
  SharedDtor();
}

void OrdersStatusResponse::SharedDtor() {
  if (this != default_instance_) {
  }
}

void OrdersStatusResponse::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* OrdersStatusResponse::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return OrdersStatusResponse_descriptor_;
}

const OrdersStatusResponse& OrdersStatusResponse::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_SignalOrdersStatus_2eproto();
  return *default_instance_;
}

OrdersStatusResponse* OrdersStatusResponse::default_instance_ = NULL;

OrdersStatusResponse* OrdersStatusResponse::New() const {
  return new OrdersStatusResponse;
}

void OrdersStatusResponse::Clear() {
  ordersstatus_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool OrdersStatusResponse::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_ordersStatus:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_ordersstatus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_ordersStatus;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void OrdersStatusResponse::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
  for (int i = 0; i < this->ordersstatus_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->ordersstatus(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* OrdersStatusResponse::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
  for (int i = 0; i < this->ordersstatus_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->ordersstatus(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int OrdersStatusResponse::ByteSize() const {
  int total_size = 0;

  // repeated .ProtoTypes.AccountOrdersStatus ordersStatus = 1;
  total_size += 1 * this->ordersstatus_size();
  for (int i = 0; i < this->ordersstatus_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ordersstatus(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void OrdersStatusResponse::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const OrdersStatusResponse* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const OrdersStatusResponse*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void OrdersStatusResponse::MergeFrom(const OrdersStatusResponse& from) {
  GOOGLE_CHECK_NE(&from, this);
  ordersstatus_.MergeFrom(from.ordersstatus_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void OrdersStatusResponse::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OrdersStatusResponse::CopyFrom(const OrdersStatusResponse& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OrdersStatusResponse::IsInitialized() const {

  for (int i = 0; i < ordersstatus_size(); i++) {
    if (!this->ordersstatus(i).IsInitialized()) return false;
  }
  return true;
}

void OrdersStatusResponse::Swap(OrdersStatusResponse* other) {
  if (other != this) {
    ordersstatus_.Swap(&other->ordersstatus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata OrdersStatusResponse::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = OrdersStatusResponse_descriptor_;
  metadata.reflection = OrdersStatusResponse_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace ProtoTypes

// @@protoc_insertion_point(global_scope)
